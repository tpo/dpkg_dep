#!/bin/sh
#
# how to create a Debian package:
# * http://ptspts.blogspot.ch/2010/02/how-to-create-debianubuntu-package-deb.html
#
# how to create a bash ansible module:
# * http://blog.trifork.com/2013/04/18/ansible-simple-module/
#
# ATTENTION: we do no argument validation to the module at all, the arguments need to be in a form that
#            can be eval'ed by the shell!

set -e

#touch /tmp/traraaaa
#
#args_file=$1
#
#eval 
#
#echo "{ \"foobar\": \"$( cat $args_file )\" }"
#
#exit 0

PACKAGENAME=foo
VERSION=0.1
ARCHITECTURE=all

need_to_update() {

  if dpkg_out=$( dpkg -s "$PACKAGENAME" 2>/dev/null ); then
    # package is installed

    current_version=$( echo "$dpkg_out" | grep ^Version | cut -d' ' -f2 )

    dpkg --compare-versions "$VERSION" gt "$current_version"

    return $?
  else
    return 0 # yes
  fi
}

create_package() {

  build_dir=$( mktemp -d -t debian_dependencies.XXXXXXXX)

  package_name_full="${PACKAGENAME}_${VERSION}_${ARCHITECTURE}"
  package_dir="$build_dir/$package_name_full"
  mkdir "$package_dir"
  mkdir "$package_dir/DEBIAN"

  control_new="$package_dir/DEBIAN/control"

  cat > "$control_new" << EOC
Package: $PACKAGENAME
Priority: optional
Section: dependencies
Installed-Size: 0
Maintainer: ansible
Architecture: all
Source: none
Version: $VERSION
Description: dependencies for $PACKAGENAME
 This package was autogenerated by ansible
EOC

  ( cd "$build_dir"
    dpkg-deb -b "$package_name_full"
  )
}

if need_to_update; then
  # yes, need to update
  create_package
  ( cd "$build_dir" && dpkg -i "$package_name_full.deb" )
else
  # no need to update
  :
fi

# clean up
if [ -d "$build_dir" ]; then
  # build_dir only set if we did create the package...
  rm -r "$build_dir"
fi
#control_current=$( mktemp )
#
#name=foo
#version=0.1
#
#dpkg -s $name > $control_current 2>/dev/null
#
#if diff -q $control_new $control_current 1>/dev/null; then
#  # up to date
#
#else
#  # we need to reinstall
#
#fi
#
##cat /tmp/foo >> /var/lib/dpkg/status
